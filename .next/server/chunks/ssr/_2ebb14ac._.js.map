{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///D:/Interview%20prep/interview/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":["file:///D:/Interview%20prep/interview/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":["file:///D:/Interview%20prep/interview/constants/index.ts"],"sourcesContent":["// import { CreateAssistantDTO } from \"@vapi-ai/web/dist/api\";\r\n// import { z } from \"zod\";\r\n\r\nexport const mappings = {\r\n  \"react.js\": \"react\",\r\n  reactjs: \"react\",\r\n  react: \"react\",\r\n  \"next.js\": \"nextjs\",\r\n  nextjs: \"nextjs\",\r\n  next: \"nextjs\",\r\n  \"vue.js\": \"vuejs\",\r\n  vuejs: \"vuejs\",\r\n  vue: \"vuejs\",\r\n  \"express.js\": \"express\",\r\n  expressjs: \"express\",\r\n  express: \"express\",\r\n  \"node.js\": \"nodejs\",\r\n  nodejs: \"nodejs\",\r\n  node: \"nodejs\",\r\n  mongodb: \"mongodb\",\r\n  mongo: \"mongodb\",\r\n  mongoose: \"mongoose\",\r\n  mysql: \"mysql\",\r\n  postgresql: \"postgresql\",\r\n  sqlite: \"sqlite\",\r\n  firebase: \"firebase\",\r\n  docker: \"docker\",\r\n  kubernetes: \"kubernetes\",\r\n  aws: \"aws\",\r\n  azure: \"azure\",\r\n  gcp: \"gcp\",\r\n  digitalocean: \"digitalocean\",\r\n  heroku: \"heroku\",\r\n  photoshop: \"photoshop\",\r\n  \"adobe photoshop\": \"photoshop\",\r\n  html5: \"html5\",\r\n  html: \"html5\",\r\n  css3: \"css3\",\r\n  css: \"css3\",\r\n  sass: \"sass\",\r\n  scss: \"sass\",\r\n  less: \"less\",\r\n  tailwindcss: \"tailwindcss\",\r\n  tailwind: \"tailwindcss\",\r\n  bootstrap: \"bootstrap\",\r\n  jquery: \"jquery\",\r\n  typescript: \"typescript\",\r\n  ts: \"typescript\",\r\n  javascript: \"javascript\",\r\n  js: \"javascript\",\r\n  \"angular.js\": \"angular\",\r\n  angularjs: \"angular\",\r\n  angular: \"angular\",\r\n  \"ember.js\": \"ember\",\r\n  emberjs: \"ember\",\r\n  ember: \"ember\",\r\n  \"backbone.js\": \"backbone\",\r\n  backbonejs: \"backbone\",\r\n  backbone: \"backbone\",\r\n  nestjs: \"nestjs\",\r\n  graphql: \"graphql\",\r\n  \"graph ql\": \"graphql\",\r\n  apollo: \"apollo\",\r\n  webpack: \"webpack\",\r\n  babel: \"babel\",\r\n  \"rollup.js\": \"rollup\",\r\n  rollupjs: \"rollup\",\r\n  rollup: \"rollup\",\r\n  \"parcel.js\": \"parcel\",\r\n  parceljs: \"parcel\",\r\n  npm: \"npm\",\r\n  yarn: \"yarn\",\r\n  git: \"git\",\r\n  github: \"github\",\r\n  gitlab: \"gitlab\",\r\n  bitbucket: \"bitbucket\",\r\n  figma: \"figma\",\r\n  prisma: \"prisma\",\r\n  redux: \"redux\",\r\n  flux: \"flux\",\r\n  redis: \"redis\",\r\n  selenium: \"selenium\",\r\n  cypress: \"cypress\",\r\n  jest: \"jest\",\r\n  mocha: \"mocha\",\r\n  chai: \"chai\",\r\n  karma: \"karma\",\r\n  vuex: \"vuex\",\r\n  \"nuxt.js\": \"nuxt\",\r\n  nuxtjs: \"nuxt\",\r\n  nuxt: \"nuxt\",\r\n  strapi: \"strapi\",\r\n  wordpress: \"wordpress\",\r\n  contentful: \"contentful\",\r\n  netlify: \"netlify\",\r\n  vercel: \"vercel\",\r\n  \"aws amplify\": \"amplify\",\r\n};\r\n\r\n// export const interviewer: CreateAssistantDTO = {\r\n//   name: \"Interviewer\",\r\n//   firstMessage:\r\n//     \"Hello! Thank you for taking the time to speak with me today. I'm excited to learn more about you and your experience.\",\r\n//   transcriber: {\r\n//     provider: \"deepgram\",\r\n//     model: \"nova-2\",\r\n//     language: \"en\",\r\n//   },\r\n//   voice: {\r\n//     provider: \"11labs\",\r\n//     voiceId: \"sarah\",\r\n//     stability: 0.4,\r\n//     similarityBoost: 0.8,\r\n//     speed: 0.9,\r\n//     style: 0.5,\r\n//     useSpeakerBoost: true,\r\n//   },\r\n//   model: {\r\n//     provider: \"openai\",\r\n//     model: \"gpt-4\",\r\n//     messages: [\r\n//       {\r\n//         role: \"system\",\r\n//         content: `You are a professional job interviewer conducting a real-time voice interview with a candidate. Your goal is to assess their qualifications, motivation, and fit for the role.\r\n\r\n// Interview Guidelines:\r\n// Follow the structured question flow:\r\n// {{questions}}\r\n\r\n// Engage naturally & react appropriately:\r\n// Listen actively to responses and acknowledge them before moving forward.\r\n// Ask brief follow-up questions if a response is vague or requires more detail.\r\n// Keep the conversation flowing smoothly while maintaining control.\r\n// Be professional, yet warm and welcoming:\r\n\r\n// Use official yet friendly language.\r\n// Keep responses concise and to the point (like in a real voice interview).\r\n// Avoid robotic phrasing—sound natural and conversational.\r\n// Answer the candidate’s questions professionally:\r\n\r\n// If asked about the role, company, or expectations, provide a clear and relevant answer.\r\n// If unsure, redirect the candidate to HR for more details.\r\n\r\n// Conclude the interview properly:\r\n// Thank the candidate for their time.\r\n// Inform them that the company will reach out soon with feedback.\r\n// End the conversation on a polite and positive note.\r\n\r\n\r\n// - Be sure to be professional and polite.\r\n// - Keep all your responses short and simple. Use official language, but be kind and welcoming.\r\n// - This is a voice conversation, so keep your responses short, like in a real conversation. Don't ramble for too long.`,\r\n//       },\r\n//     ],\r\n//   },\r\n// };\r\n\r\n// export const feedbackSchema = z.object({\r\n//   totalScore: z.number(),\r\n//   categoryScores: z.tuple([\r\n//     z.object({\r\n//       name: z.literal(\"Communication Skills\"),\r\n//       score: z.number(),\r\n//       comment: z.string(),\r\n//     }),\r\n//     z.object({\r\n//       name: z.literal(\"Technical Knowledge\"),\r\n//       score: z.number(),\r\n//       comment: z.string(),\r\n//     }),\r\n//     z.object({\r\n//       name: z.literal(\"Problem Solving\"),\r\n//       score: z.number(),\r\n//       comment: z.string(),\r\n//     }),\r\n//     z.object({\r\n//       name: z.literal(\"Cultural Fit\"),\r\n//       score: z.number(),\r\n//       comment: z.string(),\r\n//     }),\r\n//     z.object({\r\n//       name: z.literal(\"Confidence and Clarity\"),\r\n//       score: z.number(),\r\n//       comment: z.string(),\r\n//     }),\r\n//   ]),\r\n//   strengths: z.array(z.string()),\r\n//   areasForImprovement: z.array(z.string()),\r\n//   finalAssessment: z.string(),\r\n// });\r\n\r\nexport const interviewCovers = [\r\n  \"/adobe.png\",\r\n  \"/amazon.png\",\r\n  \"/facebook.png\",\r\n  \"/hostinger.png\",\r\n  \"/pinterest.png\",\r\n  \"/quora.png\",\r\n  \"/reddit.png\",\r\n  \"/skype.png\",\r\n  \"/spotify.png\",\r\n  \"/telegram.png\",\r\n  \"/tiktok.png\",\r\n  \"/yahoo.png\",\r\n];\r\n\r\nexport const dummyInterviews: Interview[] = [\r\n  {\r\n    id: \"1\",\r\n    userId: \"user1\",\r\n    role: \"Frontend Developer\",\r\n    type: \"Technical\",\r\n    techstack: [\"React\", \"TypeScript\", \"Next.js\", \"Tailwind CSS\"],\r\n    level: \"Junior\",\r\n    questions: [\"What is React?\"],\r\n    finalized: false,\r\n    createdAt: \"2024-03-15T10:00:00Z\",\r\n  },\r\n  {\r\n    id: \"2\",\r\n    userId: \"user1\",\r\n    role: \"Full Stack Developer\",\r\n    type: \"Mixed\",\r\n    techstack: [\"Node.js\", \"Express\", \"MongoDB\", \"React\"],\r\n    level: \"Senior\",\r\n    questions: [\"What is Node.js?\"],\r\n    finalized: false,\r\n    createdAt: \"2024-03-14T15:30:00Z\",\r\n  },\r\n];\r\n"],"names":[],"mappings":"AAAA,8DAA8D;AAC9D,2BAA2B;;;;;;AAEpB,MAAM,WAAW;IACtB,YAAY;IACZ,SAAS;IACT,OAAO;IACP,WAAW;IACX,QAAQ;IACR,MAAM;IACN,UAAU;IACV,OAAO;IACP,KAAK;IACL,cAAc;IACd,WAAW;IACX,SAAS;IACT,WAAW;IACX,QAAQ;IACR,MAAM;IACN,SAAS;IACT,OAAO;IACP,UAAU;IACV,OAAO;IACP,YAAY;IACZ,QAAQ;IACR,UAAU;IACV,QAAQ;IACR,YAAY;IACZ,KAAK;IACL,OAAO;IACP,KAAK;IACL,cAAc;IACd,QAAQ;IACR,WAAW;IACX,mBAAmB;IACnB,OAAO;IACP,MAAM;IACN,MAAM;IACN,KAAK;IACL,MAAM;IACN,MAAM;IACN,MAAM;IACN,aAAa;IACb,UAAU;IACV,WAAW;IACX,QAAQ;IACR,YAAY;IACZ,IAAI;IACJ,YAAY;IACZ,IAAI;IACJ,cAAc;IACd,WAAW;IACX,SAAS;IACT,YAAY;IACZ,SAAS;IACT,OAAO;IACP,eAAe;IACf,YAAY;IACZ,UAAU;IACV,QAAQ;IACR,SAAS;IACT,YAAY;IACZ,QAAQ;IACR,SAAS;IACT,OAAO;IACP,aAAa;IACb,UAAU;IACV,QAAQ;IACR,aAAa;IACb,UAAU;IACV,KAAK;IACL,MAAM;IACN,KAAK;IACL,QAAQ;IACR,QAAQ;IACR,WAAW;IACX,OAAO;IACP,QAAQ;IACR,OAAO;IACP,MAAM;IACN,OAAO;IACP,UAAU;IACV,SAAS;IACT,MAAM;IACN,OAAO;IACP,MAAM;IACN,OAAO;IACP,MAAM;IACN,WAAW;IACX,QAAQ;IACR,MAAM;IACN,QAAQ;IACR,WAAW;IACX,YAAY;IACZ,SAAS;IACT,QAAQ;IACR,eAAe;AACjB;AA8FO,MAAM,kBAAkB;IAC7B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAEM,MAAM,kBAA+B;IAC1C;QACE,IAAI;QACJ,QAAQ;QACR,MAAM;QACN,MAAM;QACN,WAAW;YAAC;YAAS;YAAc;YAAW;SAAe;QAC7D,OAAO;QACP,WAAW;YAAC;SAAiB;QAC7B,WAAW;QACX,WAAW;IACb;IACA;QACE,IAAI;QACJ,QAAQ;QACR,MAAM;QACN,MAAM;QACN,WAAW;YAAC;YAAW;YAAW;YAAW;SAAQ;QACrD,OAAO;QACP,WAAW;YAAC;SAAmB;QAC/B,WAAW;QACX,WAAW;IACb;CACD","debugId":null}},
    {"offset": {"line": 257, "column": 0}, "map": {"version":3,"sources":["file:///D:/Interview%20prep/interview/components/ui/interviewCard.tsx"],"sourcesContent":["import dayjs from \"dayjs\";\r\nimport Link from \"next/link\";\r\nimport Image from \"next/image\";\r\n\r\nimport { Button } from \"./ui/button\";\r\nimport DisplayTechIcons from \"./DisplayTechIcons\";\r\n\r\nimport { cn, getRandomInterviewCover } from \"@/lib/utils\";\r\nimport { getFeedbackByInterviewId } from \"@/lib/actions/general.action\";\r\n\r\nconst InterviewCard = async ({\r\n  interviewId,\r\n  userId,\r\n  role,\r\n  type,\r\n  techstack,\r\n  createdAt,\r\n}: InterviewCardProps) => {\r\n  const feedback =\r\n    userId && interviewId\r\n      ? await getFeedbackByInterviewId({\r\n          interviewId,\r\n          userId,\r\n        })\r\n      : null;\r\n\r\n  const normalizedType = /mix/gi.test(type) ? \"Mixed\" : type;\r\n\r\n  const badgeColor =\r\n    {\r\n      Behavioral: \"bg-light-400\",\r\n      Mixed: \"bg-light-600\",\r\n      Technical: \"bg-light-800\",\r\n    }[normalizedType] || \"bg-light-600\";\r\n\r\n  const formattedDate = dayjs(\r\n    feedback?.createdAt || createdAt || Date.now()\r\n  ).format(\"MMM D, YYYY\");\r\n\r\n  return (\r\n    <div className=\"card-border w-[360px] max-sm:w-full min-h-96\">\r\n      <div className=\"card-interview\">\r\n        <div>\r\n          {/* Type Badge */}\r\n          <div\r\n            className={cn(\r\n              \"absolute top-0 right-0 w-fit px-4 py-2 rounded-bl-lg\",\r\n              badgeColor\r\n            )}\r\n          >\r\n            <p className=\"badge-text \">{normalizedType}</p>\r\n          </div>\r\n\r\n          {/* Cover Image */}\r\n          <Image\r\n            src={getRandomInterviewCover()}\r\n            alt=\"cover-image\"\r\n            width={90}\r\n            height={90}\r\n            className=\"rounded-full object-fit size-[90px]\"\r\n          />\r\n\r\n          {/* Interview Role */}\r\n          <h3 className=\"mt-5 capitalize\">{role} Interview</h3>\r\n\r\n          {/* Date & Score */}\r\n          <div className=\"flex flex-row gap-5 mt-3\">\r\n            <div className=\"flex flex-row gap-2\">\r\n              <Image\r\n                src=\"/calendar.svg\"\r\n                width={22}\r\n                height={22}\r\n                alt=\"calendar\"\r\n              />\r\n              <p>{formattedDate}</p>\r\n            </div>\r\n\r\n            <div className=\"flex flex-row gap-2 items-center\">\r\n              <Image src=\"/star.svg\" width={22} height={22} alt=\"star\" />\r\n              <p>{feedback?.totalScore || \"---\"}/100</p>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Feedback or Placeholder Text */}\r\n          <p className=\"line-clamp-2 mt-5\">\r\n            {feedback?.finalAssessment ||\r\n              \"You haven't taken this interview yet. Take it now to improve your skills.\"}\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"flex flex-row justify-between\">\r\n          <DisplayTechIcons techStack={techstack} />\r\n\r\n          <Button className=\"btn-primary\">\r\n            <Link\r\n              href={\r\n                feedback\r\n                  ? `/interview/${interviewId}/feedback`\r\n                  : `/interview/${interviewId}`\r\n              }\r\n            >\r\n              {feedback ? \"Check Feedback\" : \"View Interview\"}\r\n            </Link>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InterviewCard;\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;;;;;;;AAKA;;;;;;;;;;;;;;AAGA,MAAM,gBAAgB,OAAO,EAC3B,WAAW,EACX,MAAM,EACN,IAAI,EACJ,IAAI,EACJ,SAAS,EACT,SAAS,EACU;IACnB,MAAM,WACJ,UAAU,cACN,MAAM,yBAAyB;QAC7B;QACA;IACF,KACA;IAEN,MAAM,iBAAiB,QAAQ,IAAI,CAAC,QAAQ,UAAU;IAEtD,MAAM,aACJ;QACE,YAAY;QACZ,OAAO;QACP,WAAW;IACb,CAAC,CAAC,eAAe,IAAI;IAEvB,MAAM,gBAAgB,CAAA,GAAA,qIAAA,CAAA,UAAK,AAAD,EACxB,UAAU,aAAa,aAAa,KAAK,GAAG,IAC5C,MAAM,CAAC;IAET,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;;sCAEC,8OAAC;4BACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,wDACA;sCAGF,cAAA,8OAAC;gCAAE,WAAU;0CAAe;;;;;;;;;;;sCAI9B,8OAAC,6HAAA,CAAA,UAAK;4BACJ,KAAK,CAAA,GAAA,4GAAA,CAAA,0BAAuB,AAAD;4BAC3B,KAAI;4BACJ,OAAO;4BACP,QAAQ;4BACR,WAAU;;;;;;sCAIZ,8OAAC;4BAAG,WAAU;;gCAAmB;gCAAK;;;;;;;sCAGtC,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;;sDACb,8OAAC,6HAAA,CAAA,UAAK;4CACJ,KAAI;4CACJ,OAAO;4CACP,QAAQ;4CACR,KAAI;;;;;;sDAEN,8OAAC;sDAAG;;;;;;;;;;;;8CAGN,8OAAC;oCAAI,WAAU;;sDACb,8OAAC,6HAAA,CAAA,UAAK;4CAAC,KAAI;4CAAY,OAAO;4CAAI,QAAQ;4CAAI,KAAI;;;;;;sDAClD,8OAAC;;gDAAG,UAAU,cAAc;gDAAM;;;;;;;;;;;;;;;;;;;sCAKtC,8OAAC;4BAAE,WAAU;sCACV,UAAU,mBACT;;;;;;;;;;;;8BAIN,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAiB,WAAW;;;;;;sCAE7B,8OAAC;4BAAO,WAAU;sCAChB,cAAA,8OAAC,4JAAA,CAAA,UAAI;gCACH,MACE,WACI,CAAC,WAAW,EAAE,YAAY,SAAS,CAAC,GACpC,CAAC,WAAW,EAAE,aAAa;0CAGhC,WAAW,mBAAmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAO7C;uCAEe","debugId":null}},
    {"offset": {"line": 472, "column": 0}, "map": {"version":3,"sources":["file:///D:/Interview%20prep/interview/app/%28root%29/page.tsx"],"sourcesContent":["import React from 'react'\r\nimport { Button } from '@/components/ui/button'\r\nimport Link from 'next/link'\r\nimport Image from 'next/image'\r\nimport { dummyInterviews } from '@/constants'\r\nimport InterviewCard from '@/components/ui/interviewCard';\r\n\r\nconst Home = () => {\r\n  return (\r\n   <>\r\n   <section className='card-cta'>\r\n    <div className='flex flex-col gap-6 max-w-lg'>\r\n      <h2>\r\n        Get interview -ready with Ai-Powered  Practice & Feedback\r\n      </h2>\r\n      <p className='text-lg'>\r\n        Practice your interview skills with our AI-powered practice and feedback.\r\n      </p>\r\n      <Button asChild className='btn-primary max-sm:w-full'>\r\n        <Link href=\"/interview\"> Start an interview</Link>\r\n      \r\n      </Button>\r\n    </div>\r\n    <Image src=\"/robot.png\" alt=\"robot-dude\" width={400} height={400} className=\"max-sm:hidden\" />\r\n   </section>\r\n   <section className=\"flex flex-col gap-6 mt-8\" >\r\n        <h2>\r\n        Your Interview\r\n      </h2>\r\n      <div className=\"interviews-section\">\r\n        {dummyInterviews.map((interview) => (\r\n          <InterviewCard {...interview} key = {interview.id}/>\r\n        ))}\r\n    {/* <p>You have&apos;t take any interview yet</p> */}\r\n    </div>\r\n    </section>\r\n    <section className=\"flex flex-col gap-6 mt-8\">\r\n\r\n      <h2>\r\n        Take an interview\r\n      </h2>\r\n      <div className=\"interviews-section\">\r\n        {dummyInterviews.map((interview) => (\r\n          <InterviewCard {...interview} key = {interview.id}/>\r\n        ))}\r\n    \r\n    </div>\r\n\r\n    </section>\r\n   </>\r\n  )\r\n}\r\n\r\nexport default Home;"],"names":[],"mappings":";;;;;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAEA,MAAM,OAAO;IACX,qBACC;;0BACA,8OAAC;gBAAQ,WAAU;;kCAClB,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;0CAAG;;;;;;0CAGJ,8OAAC;gCAAE,WAAU;0CAAU;;;;;;0CAGvB,8OAAC,2HAAA,CAAA,SAAM;gCAAC,OAAO;gCAAC,WAAU;0CACxB,cAAA,8OAAC,4JAAA,CAAA,UAAI;oCAAC,MAAK;8CAAa;;;;;;;;;;;;;;;;;kCAI5B,8OAAC,6HAAA,CAAA,UAAK;wBAAC,KAAI;wBAAa,KAAI;wBAAa,OAAO;wBAAK,QAAQ;wBAAK,WAAU;;;;;;;;;;;;0BAE7E,8OAAC;gBAAQ,WAAU;;kCACd,8OAAC;kCAAG;;;;;;kCAGN,8OAAC;wBAAI,WAAU;kCACZ,kHAAA,CAAA,kBAAe,CAAC,GAAG,CAAC,CAAC,0BACpB,4NAAC,kIAAA,CAAA,UAAa;gCAAE,GAAG,SAAS;gCAAE,KAAO,UAAU,EAAE;;;;;;;;;;;;;;;;;;;0BAKvD,8OAAC;gBAAQ,WAAU;;kCAEjB,8OAAC;kCAAG;;;;;;kCAGJ,8OAAC;wBAAI,WAAU;kCACZ,kHAAA,CAAA,kBAAe,CAAC,GAAG,CAAC,CAAC,0BACpB,4NAAC,kIAAA,CAAA,UAAa;gCAAE,GAAG,SAAS;gCAAE,KAAO,UAAU,EAAE;;;;;;;;;;;;;;;;;;;;;AAQ3D;uCAEe","debugId":null}}]
}