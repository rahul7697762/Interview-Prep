{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///D:/Interview%20prep/interview/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":["file:///D:/Interview%20prep/interview/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":["file:///D:/Interview%20prep/interview/components/ui/form.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Form = registerClientReference(\n    function() { throw new Error(\"Attempted to call Form() from the server but Form is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/form.tsx <module evaluation>\",\n    \"Form\",\n);\nexport const FormControl = registerClientReference(\n    function() { throw new Error(\"Attempted to call FormControl() from the server but FormControl is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/form.tsx <module evaluation>\",\n    \"FormControl\",\n);\nexport const FormDescription = registerClientReference(\n    function() { throw new Error(\"Attempted to call FormDescription() from the server but FormDescription is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/form.tsx <module evaluation>\",\n    \"FormDescription\",\n);\nexport const FormField = registerClientReference(\n    function() { throw new Error(\"Attempted to call FormField() from the server but FormField is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/form.tsx <module evaluation>\",\n    \"FormField\",\n);\nexport const FormItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call FormItem() from the server but FormItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/form.tsx <module evaluation>\",\n    \"FormItem\",\n);\nexport const FormLabel = registerClientReference(\n    function() { throw new Error(\"Attempted to call FormLabel() from the server but FormLabel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/form.tsx <module evaluation>\",\n    \"FormLabel\",\n);\nexport const FormMessage = registerClientReference(\n    function() { throw new Error(\"Attempted to call FormMessage() from the server but FormMessage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/form.tsx <module evaluation>\",\n    \"FormMessage\",\n);\nexport const useFormField = registerClientReference(\n    function() { throw new Error(\"Attempted to call useFormField() from the server but useFormField is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/form.tsx <module evaluation>\",\n    \"useFormField\",\n);\n"],"names":[],"mappings":";;;;;;;;;;AAAA;;AACO,MAAM,OAAO,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACtC;IAAa,MAAM,IAAI,MAAM;AAAwN,GACrP,wDACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,wDACA;AAEG,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,wDACA;AAEG,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,wDACA;AAEG,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,wDACA;AAEG,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,wDACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,wDACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,wDACA","debugId":null}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":["file:///D:/Interview%20prep/interview/components/ui/form.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Form = registerClientReference(\n    function() { throw new Error(\"Attempted to call Form() from the server but Form is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/form.tsx\",\n    \"Form\",\n);\nexport const FormControl = registerClientReference(\n    function() { throw new Error(\"Attempted to call FormControl() from the server but FormControl is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/form.tsx\",\n    \"FormControl\",\n);\nexport const FormDescription = registerClientReference(\n    function() { throw new Error(\"Attempted to call FormDescription() from the server but FormDescription is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/form.tsx\",\n    \"FormDescription\",\n);\nexport const FormField = registerClientReference(\n    function() { throw new Error(\"Attempted to call FormField() from the server but FormField is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/form.tsx\",\n    \"FormField\",\n);\nexport const FormItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call FormItem() from the server but FormItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/form.tsx\",\n    \"FormItem\",\n);\nexport const FormLabel = registerClientReference(\n    function() { throw new Error(\"Attempted to call FormLabel() from the server but FormLabel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/form.tsx\",\n    \"FormLabel\",\n);\nexport const FormMessage = registerClientReference(\n    function() { throw new Error(\"Attempted to call FormMessage() from the server but FormMessage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/form.tsx\",\n    \"FormMessage\",\n);\nexport const useFormField = registerClientReference(\n    function() { throw new Error(\"Attempted to call useFormField() from the server but useFormField is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/form.tsx\",\n    \"useFormField\",\n);\n"],"names":[],"mappings":";;;;;;;;;;AAAA;;AACO,MAAM,OAAO,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACtC;IAAa,MAAM,IAAI,MAAM;AAAwN,GACrP,oCACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,oCACA;AAEG,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,oCACA;AAEG,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,oCACA;AAEG,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,oCACA;AAEG,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,oCACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,oCACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,oCACA","debugId":null}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 191, "column": 0}, "map": {"version":3,"sources":["file:///D:/Interview%20prep/interview/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,8OAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 217, "column": 0}, "map": {"version":3,"sources":["file:///D:/Interview%20prep/interview/app/components/AuthForm.tsx"],"sourcesContent":["import React from 'react'\r\n\r\n\"use client\"\r\n\r\nimport { z } from \"zod\"\r\nimport { zodResolver } from \"@hookform/resolvers/zod\"\r\nimport { useForm } from \"react-hook-form\"\r\n\r\nimport { Button } from \"@/components/ui/button\"\r\nimport {\r\n  Form,\r\n  FormControl,\r\n  FormDescription,\r\n  FormField,\r\n  FormItem,\r\n  FormLabel,\r\n  FormMessage,\r\n} from \"@/components/ui/form\"\r\nimport { Input } from \"@/components/ui/input\"\r\n\r\n\r\nconst formSchema = z.object({\r\n  username: z.string().min(2).max(50),\r\n})\r\n\r\ninterface AuthFormProps {\r\n  type: 'sign-in' | 'sign-up'\r\n}\r\n\r\nconst AuthForm = ({ type }: AuthFormProps) => {\r\n    // 1. Define your form.\r\n    const form = useForm<z.infer<typeof formSchema>>({\r\n        resolver: zodResolver(formSchema),\r\n        defaultValues: {\r\n          username: \"\",\r\n        },\r\n      })\r\n     \r\n      // 2. Define a submit handler.\r\n      function onSubmit(values: z.infer<typeof formSchema>) {\r\n        // Do something with the form values.\r\n        // ✅ This will be type-safe and validated.\r\n        console.log(values)\r\n      }\r\n      return (\r\n        <div>\r\n             <Form {...form}>\r\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-8\">\r\n        <FormField\r\n          control={form.control}\r\n          name=\"username\"\r\n          render={({ field }) => (\r\n            <FormItem>\r\n              <FormLabel>Username</FormLabel>\r\n              <FormControl>\r\n                <Input placeholder=\"shadcn\" {...field} />\r\n              </FormControl>\r\n              <FormDescription>\r\n                This is your public display name.\r\n              </FormDescription>\r\n              <FormMessage />\r\n            </FormItem>\r\n          )}\r\n        />\r\n        <Button type=\"submit\">Submit</Button>\r\n      </form>\r\n    </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AuthForm"],"names":[],"mappings":";;;;AAIA;AACA;AACA;AAEA;AACA;AASA;AAhBA;;;;;;;;AAmBA,MAAM,aAAa,kKAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC1B,UAAU,kKAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;AAClC;AAMA,MAAM,WAAW,CAAC,EAAE,IAAI,EAAiB;IACrC,uBAAuB;IACvB,MAAM,OAAO,CAAA,GAAA,wKAAA,CAAA,UAAO,AAAD,EAA8B;QAC7C,UAAU,CAAA,GAAA,8JAAA,CAAA,cAAW,AAAD,EAAE;QACtB,eAAe;YACb,UAAU;QACZ;IACF;IAEA,8BAA8B;IAC9B,SAAS,SAAS,MAAkC;QAClD,qCAAqC;QACrC,0CAA0C;QAC1C,QAAQ,GAAG,CAAC;IACd;IACA,qBACE,8OAAC;kBACI,cAAA,8OAAC,yHAAA,CAAA,OAAI;YAAE,GAAG,IAAI;sBACrB,cAAA,8OAAC;gBAAK,UAAU,KAAK,YAAY,CAAC;gBAAW,WAAU;;kCACrD,8OAAC,yHAAA,CAAA,YAAS;wBACR,SAAS,KAAK,OAAO;wBACrB,MAAK;wBACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,8OAAC,yHAAA,CAAA,WAAQ;;kDACP,8OAAC,yHAAA,CAAA,YAAS;kDAAC;;;;;;kDACX,8OAAC,yHAAA,CAAA,cAAW;kDACV,cAAA,8OAAC,0HAAA,CAAA,QAAK;4CAAC,aAAY;4CAAU,GAAG,KAAK;;;;;;;;;;;kDAEvC,8OAAC,yHAAA,CAAA,kBAAe;kDAAC;;;;;;kDAGjB,8OAAC,yHAAA,CAAA,cAAW;;;;;;;;;;;;;;;;kCAIlB,8OAAC,2HAAA,CAAA,SAAM;wBAAC,MAAK;kCAAS;;;;;;;;;;;;;;;;;;;;;;AAK9B;uCAEe","debugId":null}},
    {"offset": {"line": 340, "column": 0}, "map": {"version":3,"sources":["file:///D:/Interview%20prep/interview/app/%28auth%29/sign-in/page.tsx"],"sourcesContent":["import React from 'react'\r\nimport AuthForm from '@/app/components/AuthForm'\r\n\r\nconst Page = () => {\r\n  return <AuthForm type = \"sign-in\" />\r\n}\r\n\r\nexport default Page;"],"names":[],"mappings":";;;;AACA;;;AAEA,MAAM,OAAO;IACX,qBAAO,8OAAC,8HAAA,CAAA,UAAQ;QAAC,MAAO;;;;;;AAC1B;uCAEe","debugId":null}}]
}